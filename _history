{"entries":[{"timestamp":1747138692316,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":37},{"diffs":[[0,"art\""],[-1," x=\"20\" y=\"20\""],[0,"></b"]],"start1":67,"start2":67,"length1":22,"length2":8},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":23,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"let use_huskylens = true\nif (use_huskylens) {\n    huskylens.initI2c()\n    huskylens.initMode(protocolAlgorithm.OBJECTCLASSIFICATION)\n}\n\nlet score = 0\nlet score2 = 0\nlet advance_score = 0\nlet is_advanced = false\nlet countdown_limit = 180\nlet advance_time = 120\nlet is_running = false\n/** correct ID check */\n//  ========= 正確圖卡 ID 判斷 =========\nfunction check_image_phase1(): boolean {\n    for (let id of [3, 4]) {\n        if (huskylens.isAppear_s(id)) {\n            return true\n        }\n        \n    }\n    return false\n}\n\nfunction check_image_phase2(): boolean {\n    for (let id of [6, 7]) {\n        if (huskylens.isAppear_s(id)) {\n            return true\n        }\n        \n    }\n    return false\n}\n\nfunction check_image_phase3(): boolean {\n    for (let id of [10, 11]) {\n        if (huskylens.isAppear_s(id)) {\n            return true\n        }\n        \n    }\n    return false\n}\n\n/** wrong ID check */\n//  ========= 錯誤圖卡 ID 判斷 =========\nfunction check_wrong_image_phase1(shown_ids: number[]): boolean {\n    for (let id of [1, 2, 5]) {\n        if (huskylens.isAppear_s(id) && !(shown_ids.indexOf(id) >= 0)) {\n            shown_ids.push(id)\n            return true\n        }\n        \n    }\n    return false\n}\n\nfunction check_wrong_image_phase2(shown_ids: number[]): boolean {\n    for (let id of [6, 7]) {\n        if (huskylens.isAppear_s(id) && !(shown_ids.indexOf(id) >= 0)) {\n            shown_ids.push(id)\n            return true\n        }\n        \n    }\n    return false\n}\n\nfunction check_wrong_image_phase3(shown_ids: number[]): boolean {\n    for (let id of [8, 9]) {\n        if (huskylens.isAppear_s(id) && !(shown_ids.indexOf(id) >= 0)) {\n            shown_ids.push(id)\n            return true\n        }\n        \n    }\n    return false\n}\n\n//  =========第一回合 =========\nfunction display_countdown_phase1(seconds: number) {\n    let shown_wrong_ids : number[] = []\n    let tick = 0\n    for (let i = seconds; i > 0; i += -1) {\n        basic.showNumber(i)\n        tick += 1\n        if (tick % 3 == 0) {\n            huskylens.request()\n            if (check_image_phase1()) {\n                basic.showString(\"Good job\")\n                \n                score += 1\n                break\n            } else if (check_wrong_image_phase1(shown_wrong_ids)) {\n                music.playTone(196, music.beat(BeatFraction.Eighth))\n                basic.showString(\"X\")\n            }\n            \n        }\n        \n        basic.pause(1000)\n    }\n}\n\n//  ========= 第二回合 =========\nfunction display_countdown_phase2(seconds: number) {\n    let shown_wrong_ids : number[] = []\n    let tick = 0\n    for (let i = seconds; i > 0; i += -1) {\n        basic.showNumber(i)\n        tick += 1\n        if (tick % 3 == 0) {\n            huskylens.request()\n            if (check_image_phase2()) {\n                basic.showString(\"Good job\")\n                \n                score2 += 1\n                break\n            } else if (check_wrong_image_phase2(shown_wrong_ids)) {\n                music.playTone(196, music.beat(BeatFraction.Eighth))\n                basic.showString(\"X\")\n            }\n            \n        }\n        \n        basic.pause(1000)\n    }\n}\n\n//  ========= 進階挑戰 =========\nfunction display_advance_mode(seconds: number) {\n    let shown_wrong_ids : number[] = []\n    let tick = 0\n    for (let i = seconds; i > 0; i += -1) {\n        basic.showNumber(i)\n        tick += 1\n        if (tick % 3 == 0) {\n            huskylens.request()\n            if (check_image_phase3()) {\n                basic.showString(\"Good job\")\n                \n                advance_score += 5\n            } else if (check_wrong_image_phase3(shown_wrong_ids)) {\n                music.playTone(196, music.beat(BeatFraction.Eighth))\n                basic.showString(\"X\")\n            }\n            \n        }\n        \n        basic.pause(1000)\n    }\n}\n\n//  ========= 第一階段 (A鍵) =========\nfunction start_quiz() {\n    \n    is_advanced = false\n    score = 0\n    basic.showString(\"ROUND 1\")\n    display_countdown_phase1(countdown_limit)\n    basic.clearScreen()\n    basic.showString(\"Score:\")\n    basic.showNumber(score)\n}\n\n//  ========= 第二階段 (B鍵) =========\nfunction start_quiz2() {\n    \n    is_advanced = false\n    score2 = 0\n    basic.showString(\"ROUND 2\")\n    display_countdown_phase2(countdown_limit)\n    basic.clearScreen()\n    basic.showString(\"Score2:\")\n    basic.showNumber(score2)\n}\n\n//  ========= 進階挑戰階段 (A+B鍵) =========\nfunction start_advanced() {\n    \n    is_advanced = true\n    advance_score = 0\n    basic.showString(\"ADV\")\n    display_advance_mode(advance_time)\n    basic.clearScreen()\n    basic.showString(\"AdvScore:\")\n    basic.showNumber(advance_score)\n    basic.showString(\"Total:\")\n    basic.showNumber(score + score2 + advance_score)\n}\n\n//  ========= 按鍵事件 =========\ninput.onButtonPressed(Button.A, function on_button_pressed_a() {\n    \n    if (is_running) {\n        return\n    }\n    \n    is_running = true\n    basic.clearScreen()\n    let start_text = \"START!\"\n    let start_tones = [262, 294, 330, 349, 392, 440]\n    for (let i = 0; i < start_text.length; i++) {\n        basic.showString(start_text[i])\n        music.playTone(start_tones[i], music.beat(BeatFraction.Eighth))\n        basic.pause(100)\n    }\n    basic.pause(500)\n    start_quiz()\n    is_running = false\n})\ninput.onButtonPressed(Button.B, function on_button_pressed_b() {\n    \n    if (is_running) {\n        return\n    }\n    \n    is_running = true\n    basic.clearScreen()\n    let start_text = \"START!\"\n    let start_tones = [262, 294, 330, 349, 392, 440]\n    for (let i = 0; i < start_text.length; i++) {\n        basic.showString(start_text[i])\n        music.playTone(start_tones[i], music.beat(BeatFraction.Eighth))\n        basic.pause(100)\n    }\n    basic.pause(500)\n    start_quiz2()\n    is_running = false\n})\ninput.onButtonPressed(Button.AB, function on_button_pressed_ab() {\n    \n    if (is_running) {\n        return\n    }\n    \n    is_running = true\n    basic.clearScreen()\n    let adv_text = \"START!\"\n    let adv_tones = [220, 196, 175, 165]\n    for (let i = 0; i < adv_text.length; i++) {\n        basic.showString(adv_text[i])\n        music.playTone(adv_tones[i], music.beat(BeatFraction.Eighth))\n        basic.pause(100)\n    }\n    basic.pause(500)\n    start_advanced()\n    is_running = false\n})"],[0,"\n"]],"start1":0,"start2":0,"length1":6244,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"*\""],[-1,",\n        \"Huskylens\": \"github:dfrobot/pxt-dfrobot_huskylens#v2.0.7\""],[0,"\n   "]],"start1":132,"start2":132,"length1":76,"length2":8},{"diffs":[[0,".md\""],[-1,",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\""],[1,"\n    ],\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":216,"start2":216,"length1":64,"length2":44}]},{"type":"added","filename":"main.py","value":"use_huskylens = True\r\nif use_huskylens:\r\n    huskylens.init_i2c()\r\n    huskylens.init_mode(protocolAlgorithm.OBJECTCLASSIFICATION)\r\n\r\nscore = 0\r\nscore2 = 0\r\nadvance_score = 0\r\nis_advanced = False\r\ncountdown_limit = 180\r\nadvance_time = 120\r\nis_running = False\r\n\r\n\"\"\"\r\ncorrect ID check\r\n\"\"\"\r\n\r\n# ========= 正確圖卡 ID 判斷 =========\r\ndef check_image_phase1():\r\n    for id in [3, 4]:\r\n        if huskylens.isAppear_s(id):\r\n            return True\r\n    return False\r\n\r\ndef check_image_phase2():\r\n    for id in [6, 7]:\r\n        if huskylens.isAppear_s(id):\r\n            return True\r\n    return False\r\n\r\ndef check_image_phase3():\r\n    for id in [10, 11]:\r\n        if huskylens.isAppear_s(id):\r\n            return True\r\n    return False\r\n\r\n\"\"\"\r\nwrong ID check\r\n\"\"\"\r\n# ========= 錯誤圖卡 ID 判斷 =========\r\ndef check_wrong_image_phase1(shown_ids: List[number]) -> bool:\r\n    for id in [1, 2, 5]:\r\n        if huskylens.isAppear_s(id) and not id in shown_ids:\r\n            shown_ids.append(id)\r\n            return True\r\n    return False\r\n\r\ndef check_wrong_image_phase2(shown_ids: List[number]) -> bool:\r\n    for id in [6, 7]:\r\n        if huskylens.isAppear_s(id) and not id in shown_ids:\r\n            shown_ids.append(id)\r\n            return True\r\n    return False\r\n\r\ndef check_wrong_image_phase3(shown_ids: List[number]) -> bool:\r\n    for id in [8, 9]:\r\n        if huskylens.isAppear_s(id) and not id in shown_ids:\r\n            shown_ids.append(id)\r\n            return True\r\n    return False\r\n\r\n# =========第一回合 =========\r\ndef display_countdown_phase1(seconds: number):\r\n    shown_wrong_ids: List[number] = []\r\n    tick = 0\r\n    for i in range(seconds, 0, -1):\r\n        basic.show_number(i)\r\n        tick += 1\r\n\r\n        if tick % 3 == 0:\r\n            huskylens.request()\r\n            if check_image_phase1():\r\n                basic.show_string(\"Good job\")\r\n                global score\r\n                score += 1\r\n                break\r\n            elif check_wrong_image_phase1(shown_wrong_ids):\r\n                music.play_tone(196, music.beat(BeatFraction.EIGHTH))\r\n                basic.show_string(\"X\")\r\n\r\n        basic.pause(1000)\r\n\r\n# ========= 第二回合 =========\r\ndef display_countdown_phase2(seconds: number):\r\n    shown_wrong_ids: List[number] = []\r\n    tick = 0\r\n    for i in range(seconds, 0, -1):\r\n        basic.show_number(i)\r\n        tick += 1\r\n\r\n        if tick % 3 == 0:\r\n            huskylens.request()\r\n            if check_image_phase2():\r\n                basic.show_string(\"Good job\")\r\n                global score2\r\n                score2 += 1\r\n                break\r\n            elif check_wrong_image_phase2(shown_wrong_ids):\r\n                music.play_tone(196, music.beat(BeatFraction.EIGHTH))\r\n                basic.show_string(\"X\")\r\n\r\n        basic.pause(1000)\r\n\r\n# ========= 進階挑戰 =========\r\ndef display_advance_mode(seconds: number):\r\n    shown_wrong_ids: List[number] = []\r\n    tick = 0\r\n    for i in range(seconds, 0, -1):\r\n        basic.show_number(i)\r\n        tick += 1\r\n\r\n        if tick % 3 == 0:\r\n            huskylens.request()\r\n            if check_image_phase3():\r\n                basic.show_string(\"Good job\")\r\n                global advance_score\r\n                advance_score += 5\r\n            elif check_wrong_image_phase3(shown_wrong_ids):\r\n                music.play_tone(196, music.beat(BeatFraction.EIGHTH))\r\n                basic.show_string(\"X\")\r\n\r\n        basic.pause(1000)\r\n\r\n# ========= 第一階段 (A鍵) =========\r\ndef start_quiz():\r\n    global is_advanced, score\r\n    is_advanced = False\r\n    score = 0\r\n    basic.show_string(\"ROUND 1\")\r\n    display_countdown_phase1(countdown_limit)\r\n    basic.clear_screen()\r\n    basic.show_string(\"Score:\")\r\n    basic.show_number(score)\r\n\r\n# ========= 第二階段 (B鍵) =========\r\ndef start_quiz2():\r\n    global is_advanced, score2\r\n    is_advanced = False\r\n    score2 = 0\r\n    basic.show_string(\"ROUND 2\")\r\n    display_countdown_phase2(countdown_limit)\r\n    basic.clear_screen()\r\n    basic.show_string(\"Score2:\")\r\n    basic.show_number(score2)\r\n\r\n# ========= 進階挑戰階段 (A+B鍵) =========\r\ndef start_advanced():\r\n    global is_advanced, advance_score\r\n    is_advanced = True\r\n    advance_score = 0\r\n    basic.show_string(\"ADV\")\r\n    display_advance_mode(advance_time)\r\n    basic.clear_screen()\r\n    basic.show_string(\"AdvScore:\")\r\n    basic.show_number(advance_score)\r\n    basic.show_string(\"Total:\")\r\n    basic.show_number(score + score2 + advance_score)\r\n\r\n# ========= 按鍵事件 =========\r\ndef on_button_pressed_a():\r\n    global is_running\r\n    if is_running:\r\n        return\r\n    is_running = True\r\n    basic.clear_screen()\r\n    start_text = \"START!\"\r\n    start_tones = [262, 294, 330, 349, 392, 440]\r\n    for i in range(len(start_text)):\r\n        basic.show_string(start_text[i])\r\n        music.play_tone(start_tones[i], music.beat(BeatFraction.EIGHTH))\r\n        basic.pause(100)\r\n    basic.pause(500)\r\n    start_quiz()\r\n    is_running = False\r\n\r\ndef on_button_pressed_b():\r\n    global is_running\r\n    if is_running:\r\n        return\r\n    is_running = True\r\n    basic.clear_screen()\r\n    start_text = \"START!\"\r\n    start_tones = [262, 294, 330, 349, 392, 440]\r\n    for i in range(len(start_text)):\r\n        basic.show_string(start_text[i])\r\n        music.play_tone(start_tones[i], music.beat(BeatFraction.EIGHTH))\r\n        basic.pause(100)\r\n    basic.pause(500)\r\n    start_quiz2()\r\n    is_running = False\r\n\r\ndef on_button_pressed_ab():\r\n    global is_running\r\n    if is_running:\r\n        return\r\n    is_running = True\r\n    basic.clear_screen()\r\n    adv_text = \"START!\"\r\n    adv_tones = [220, 196, 175, 165]\r\n    for i in range(len(adv_text)):\r\n        basic.show_string(adv_text[i])\r\n        music.play_tone(adv_tones[i], music.beat(BeatFraction.EIGHTH))\r\n        basic.pause(100)\r\n    basic.pause(500)\r\n    start_advanced()\r\n    is_running = False\r\n\r\ninput.on_button_pressed(Button.A, on_button_pressed_a)\r\ninput.on_button_pressed(Button.B, on_button_pressed_b)\r\ninput.on_button_pressed(Button.AB, on_button_pressed_ab)\r\n"}]},{"timestamp":1747139237774,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"alse\r\n\r\n"],[-1,"\r\n\r\n"],[0,"\"\"\"\r\nwro"]],"start1":719,"start2":719,"length1":20,"length2":16}]}]},{"timestamp":1747139593528,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"\n}\n\n"],[-1,"function check_image_phase4(): boolean {\n    for (let id of [12, 13]) {\n        if (huskylens.isAppear_s(id)) {\n            return true\n        }\n        \n    }\n    return false\n}\n\n"],[0,"/** "]],"start1":877,"start2":877,"length1":189,"length2":8},{"diffs":[[0,"\n}\n\n"],[-1,"function check_wrong_image_phase4(shown_ids: number[]): boolean {\n    for (let id of [8, 9]) {\n        if (huskylens.isAppear_s(id) && !(shown_ids.indexOf(id) >= 0)) {\n            shown_ids.push(id)\n            return true\n        }\n        \n    }\n    return false\n}\n\n"],[0,"//  "]],"start1":1741,"start2":1741,"length1":276,"length2":8}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"\r\n\r\n"],[-1,"def check_image_phase4():\r\n    for id in [12, 13]:\r\n        if huskylens.isAppear_s(id):\r\n            return True\r\n    return False"],[0,"\r\n\r\n"]],"start1":723,"start2":723,"length1":139,"length2":8},{"diffs":[[0,"\r\n\r\n"],[-1,"def check_wrong_image_phase4(shown_ids: List[number]) -> bool:\r\n    for id in [8, 9]:\r\n        if huskylens.isAppear_s(id) and not id in shown_ids:\r\n            shown_ids.append(id)\r\n            return True\r\n    return False\r\n\r\n"],[0,"# =="]],"start1":1474,"start2":1474,"length1":236,"length2":8}]}]},{"timestamp":1747140167393,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"nce_"],[-1,"challenge(total_"],[1,"mode("],[0,"seco"]],"start1":3176,"start2":3176,"length1":24,"length2":13},{"diffs":[[0," 0\r\n"],[-1,"    question = 1\r\n    correct_count = 0\r\n\r\n"],[0,"    "]],"start1":3254,"start2":3254,"length1":51,"length2":8},{"diffs":[[0,"nge("],[-1,"total_"],[0,"seco"]],"start1":3273,"start2":3273,"length1":14,"length2":8},{"diffs":[[0,"uest()\r\n"],[-1,"\r\n"],[0,"        "]],"start1":3398,"start2":3398,"length1":18,"length2":16},{"diffs":[[0,"    "],[-1,"    correct_count += 1\r\n                question += 1\r\n\r\n                if correct_count >= 5:\r\n                    break\r\n\r\n            else: #後三題\r\n                if question <= 3:\r\n                    "],[1,"el"],[0,"if c"]],"start1":3573,"start2":3573,"length1":213,"length2":10},{"diffs":[[0,"            "],[-1,"     "],[-1,"   "],[0,"music.play_t"]],"start1":3630,"start2":3630,"length1":32,"length2":24},{"diffs":[[0,"))\r\n"],[-1,"                        basic.show_string(\"X\")\r\n                else:\r\n                    if check_wrong_image_phase4(shown_wrong_ids):\r\n                        music.play_tone(196, music.beat(BeatFraction.EIGHTH))\r\n        "],[0,"    "]],"start1":3693,"start2":3693,"length1":233,"length2":8},{"diffs":[[0,"000)\r\n\r\n"],[-1,"\r\n\r\n\r\n"],[0,"# ======"]],"start1":3760,"start2":3760,"length1":22,"length2":16}]}]},{"timestamp":1747140756552,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"of ["],[-1,"1, 2, 3, 4, 5, 6"],[1,"3, 4"],[0,"]) {"]],"start1":399,"start2":399,"length1":24,"length2":12},{"diffs":[[0,"of ["],[-1,"7, 8, 9, 10, 11"],[1,"6, 7"],[0,"]) {"]],"start1":578,"start2":578,"length1":23,"length2":12},{"diffs":[[0,"f [1"],[-1,"4, 15, 16"],[1,"0, 11"],[0,"]) {"]],"start1":758,"start2":758,"length1":17,"length2":13},{"diffs":[[0,"nce_"],[-1,"challenge(total_"],[1,"mode("],[0,"seco"]],"start1":3638,"start2":3638,"length1":24,"length2":13},{"diffs":[[0,"= 0\n"],[-1,"    let question = 1\n    let correct_count = 0\n"],[0,"    "]],"start1":3719,"start2":3719,"length1":55,"length2":8},{"diffs":[[0,"i = "],[-1,"total_"],[0,"seco"]],"start1":3736,"start2":3736,"length1":14,"length2":8},{"diffs":[[0,"ng(\"Good"],[1," job"],[0,"\")\n     "]],"start1":3944,"start2":3944,"length1":16,"length2":20},{"diffs":[[0,"    "],[-1,"    correct_count += 1\n                question += 1\n                if (correct_count >= 5) {\n                    break\n                }\n                \n            } else if (question <= 3) {\n                if (check_wrong_image_phase3(shown_wrong_ids)) {\n                    music.playTone(196, music.beat(BeatFraction.Eighth))\n                    basic.showString(\"X\")\n                }\n                \n            } else if (check_wrong_image_phase4"],[1,"} else if (check_wrong_image_phase3"],[0,"(sho"]],"start1":4019,"start2":4019,"length1":466,"length2":43},{"diffs":[[0,"nce_"],[-1,"challeng"],[1,"mod"],[0,"e(ad"]],"start1":4961,"start2":4961,"length1":16,"length2":11}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"in ["],[-1,"1, 2, 3, 4, 5, 6"],[1,"3, 4"],[0,"]:\r\n"]],"start1":364,"start2":364,"length1":24,"length2":12},{"diffs":[[0,"in ["],[-1,"7, 8, 9, 10, 11"],[1,"6, 7"],[0,"]:"],[-1," "],[0,"\r\n  "]],"start1":497,"start2":497,"length1":26,"length2":14},{"diffs":[[0,"n [1"],[-1,"4, 15, 16"],[1,"0, 11"],[0,"]:\r\n"]],"start1":631,"start2":631,"length1":17,"length2":13},{"diffs":[[0,"ng(\"Good"],[1," job"],[0,"\")\r\n    "]],"start1":3537,"start2":3537,"length1":16,"length2":20},{"diffs":[[0,"advance_"],[-1,"challeng"],[1,"mod"],[0,"e(advanc"]],"start1":5055,"start2":5055,"length1":24,"length2":19}]}]},{"timestamp":1747141224600,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"ION)\r\n\r\n"],[-1,"\r\n"],[0,"score = "]],"start1":126,"start2":126,"length1":18,"length2":16}]}]},{"timestamp":1747142353594,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"N)\r\n\r\n\r\n"],[-1,"\r\n"],[0,"score = "]],"start1":128,"start2":128,"length1":18,"length2":16}]}]},{"timestamp":1747142354121,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"rue\n"],[-1,"// "],[0,"if "],[1,"("],[0,"use_"]],"start1":21,"start2":21,"length1":14,"length2":12},{"diffs":[[0,"lens"],[-1,":\n// "],[1,") {\n"],[0,"    "]],"start1":38,"start2":38,"length1":13,"length2":12},{"diffs":[[0,"init"],[-1,"_i"],[1,"I"],[0,"2c()\n"],[-1,"// "],[0,"    "]],"start1":60,"start2":60,"length1":18,"length2":14},{"diffs":[[0,"init"],[-1,"_mode(protocolAlgorithm.OBJECTCLASSIFICATION)\nbasic.showString(\"Init\")\nhuskylens.initI2c()\nhuskylens.initMode(protocolAlgorithm.OBJECTCLASSIFICATION)\nbasic.forever(function on_forever() {\n    basic.showString(\"R\")\n    huskylens.request()\n})"],[1,"Mode(protocolAlgorithm.OBJECTCLASSIFICATION)\n}\n"],[0,"\nlet"]],"start1":84,"start2":84,"length1":248,"length2":55},{"diffs":[[0,"(let id of ["],[-1,"7, 8, 9, 10, 11"],[1,"1, 2, 5"],[0,"]) {\n       "]],"start1":1220,"start2":1220,"length1":39,"length2":31},{"diffs":[[0," id of ["],[-1,"1, 2, 3, 4, 5, 6"],[1,"6, 7"],[0,"]) {\n   "]],"start1":1495,"start2":1495,"length1":32,"length2":20},{"diffs":[[0,"for (let id of ["],[-1,"12, 13"],[1,"8, 9"],[0,"]) {\n        if "]],"start1":1755,"start2":1755,"length1":38,"length2":36},{"diffs":[[0,"(let id of ["],[-1,"14, 15, 16"],[1,"8, 9"],[0,"]) {\n       "]],"start1":2027,"start2":2027,"length1":34,"length2":28},{"diffs":[[0," score2 = 0\n"],[1,"    basic.showString(\"ROUND 2\")\n"],[0,"    display_"]],"start1":5133,"start2":5133,"length1":24,"length2":56},{"diffs":[[0,"e_score = 0\n"],[1,"    basic.showString(\"ADV\")\n"],[0,"    display_"]],"start1":5415,"start2":5415,"length1":24,"length2":52}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"= True\r\n"],[-1,"#"],[0,"if use_h"]],"start1":14,"start2":14,"length1":17,"length2":16},{"diffs":[[0,"ylens:\r\n"],[-1,"#"],[0,"    husk"]],"start1":33,"start2":33,"length1":17,"length2":16},{"diffs":[[0,"_i2c()\r\n"],[-1,"#"],[0,"    husk"]],"start1":59,"start2":59,"length1":17,"length2":16},{"diffs":[[0,"\r\n\r\n"],[-1,"basic.show_string(\"Init\")\r\nhuskylens.init_i2c()\r\nhuskylens.init_mode(protocolAlgorithm.OBJECTCLASSIFICATION)\r\n\r\ndef on_forever():\r\n    basic.show_string(\"R\")\r\n    huskylens.request()\r\n\r\nbasic.forever(on_forever)"],[0,"\r\n\r\n"]],"start1":130,"start2":130,"length1":219,"length2":8},{"diffs":[[0," id in ["],[-1,"7, 8, 9, 10, 11"],[1,"1, 2, 5"],[0,"]:\r\n    "]],"start1":1025,"start2":1025,"length1":31,"length2":23},{"diffs":[[0," id in ["],[-1,"1, 2, 3, 4, 5, 6"],[1,"6, 7"],[0,"]:\r\n    "]],"start1":1256,"start2":1256,"length1":32,"length2":20},{"diffs":[[0,"\n    for id in ["],[-1,"12, 13"],[1,"8, 9"],[0,"]:\r\n        if h"]],"start1":1476,"start2":1476,"length1":38,"length2":36},{"diffs":[[0," for id in ["],[-1,"14, 15, 16"],[1,"8, 9"],[0,"]:\r\n        "]],"start1":1708,"start2":1708,"length1":34,"length2":28},{"diffs":[[0,"score2 = 0\r\n"],[1,"    basic.show_string(\"ROUND 2\")\r\n"],[0,"    display_"]],"start1":4709,"start2":4709,"length1":24,"length2":58},{"diffs":[[0,"_score = 0\r\n"],[1,"    basic.show_string(\"ADV\")\r\n"],[0,"    display_"]],"start1":5029,"start2":5029,"length1":24,"length2":54}]}]},{"timestamp":1747142930304,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"ICATION)\r\n\r\n"],[1,"basic.show_string(\"Init\")\r\nhuskylens.init_i2c()\r\nhuskylens.init_mode(protocolAlgorithm.OBJECTCLASSIFICATION)\r\n\r\ndef on_forever():\r\n    basic.show_string(\"R\")\r\n    huskylens.request()\r\n\r\nbasic.forever(on_forever)"],[0,"\r\n\r\nscore = "]],"start1":125,"start2":125,"length1":24,"length2":235}]}]},{"timestamp":1747143615216,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"CATION)\n"],[1,"basic.showString(\"Init\")\nhuskylens.initI2c()\nhuskylens.initMode(protocolAlgorithm.OBJECTCLASSIFICATION)\nbasic.forever(function on_forever() {\n    basic.showString(\"R\")\n    huskylens.request()\n})\n"],[0,"let scor"]],"start1":133,"start2":133,"length1":16,"length2":211}]}]},{"timestamp":1747143615746,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," = true\n"],[1,"// "],[0,"if "],[-1,"("],[0,"use_husk"]],"start1":17,"start2":17,"length1":20,"length2":22},{"diffs":[[0,"uskylens"],[-1,") {\n"],[1,":\n// "],[0,"    husk"]],"start1":36,"start2":36,"length1":20,"length2":21},{"diffs":[[0,"init"],[-1,"I"],[1,"_i"],[0,"2c()\n"],[1,"// "],[0,"    "]],"start1":63,"start2":63,"length1":14,"length2":18},{"diffs":[[0,"init"],[-1,"M"],[1,"_m"],[0,"ode("]],"start1":91,"start2":91,"length1":9,"length2":10},{"diffs":[[0,"CATION)\n"],[-1,"}\n\n"],[0,"let scor"]],"start1":133,"start2":133,"length1":19,"length2":16}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"est3"],[-1," new"],[0,"\",\n "]],"start1":16,"start2":16,"length1":12,"length2":8}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"= True\r\n"],[1,"#"],[0,"if use_h"]],"start1":14,"start2":14,"length1":16,"length2":17},{"diffs":[[0,"huskylens:\r\n"],[1,"#"],[0,"    huskylen"]],"start1":30,"start2":30,"length1":24,"length2":25},{"diffs":[[0,"init_i2c()\r\n"],[1,"#"],[0,"    huskylen"]],"start1":57,"start2":57,"length1":24,"length2":25}]}]},{"timestamp":1747143625922,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"ylens = "],[1,"True"],[0,"\r\nif use"]],"start1":8,"start2":8,"length1":16,"length2":20}]}]},{"timestamp":1747282771597,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"s = "],[-1,"ㄑ"],[0,"\r\nif"]],"start1":12,"start2":12,"length1":9,"length2":8}]}]},{"timestamp":1747282771810,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ylens = "],[-1,"fals"],[1,"tru"],[0,"e\nif (us"]],"start1":12,"start2":12,"length1":20,"length2":19},{"diffs":[[0,"e\n    score = 0\n"],[1,"    basic.showString(\"ROUND 1\")\n"],[0,"    display_coun"]],"start1":4890,"start2":4890,"length1":32,"length2":64},{"diffs":[[0,".showNumber("],[-1,"score + "],[0,"score2)\n}\n\n/"]],"start1":5284,"start2":5284,"length1":32,"length2":24}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[-1,"from microbit import *\r\n\r\ncheck = Image(\"00000:\"\r\n              \"00009:\"\r\n              \"00090:\"\r\n              \"09000:\"\r\n              \"90000\")\r\n\r\n\r\n\r\n"],[0,"use_"]],"start1":0,"start2":0,"length1":156,"length2":4},{"diffs":[[0,"ylens = "],[-1,"False"],[1,"ㄑ"],[0,"\r\nif use"]],"start1":8,"start2":8,"length1":21,"length2":17},{"diffs":[[0,"\n    score = 0\r\n"],[1,"    basic.show_string(\"ROUND 1\")\r\n"],[0,"    display_coun"]],"start1":4432,"start2":4432,"length1":32,"length2":66},{"diffs":[[0,"show_number("],[-1,"score + "],[0,"score2)\r\n\r\n#"]],"start1":4863,"start2":4863,"length1":32,"length2":24}]}]},{"timestamp":1747283306616,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"iables><"],[1,"block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block><"],[0,"/xml>"]],"start1":71,"start2":71,"length1":13,"length2":114}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"sic.show"],[-1,"Icon(IconNames.Yes"],[1,"String(\"Good job\""],[0,")\n      "]],"start1":2597,"start2":2597,"length1":34,"length2":33},{"diffs":[[0,"sic.show"],[-1,"Icon(IconNames.Yes"],[1,"String(\"Good job\""],[0,")\n      "]],"start1":3294,"start2":3294,"length1":34,"length2":33},{"diffs":[[0,"show"],[-1,"Icon(IconNames.Yes"],[1,"String(\"Good\""],[0,")\n  "]],"start1":4056,"start2":4056,"length1":26,"length2":21}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"st3 "],[-1,"brand"],[0,"new\""]],"start1":17,"start2":17,"length1":13,"length2":8},{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":315,"start2":315,"length1":52,"length2":8}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[1,"from microbit import *\r\n\r\ncheck = Image(\"00000:\"\r\n              \"00009:\"\r\n              \"00090:\"\r\n              \"09000:\"\r\n              \"90000\")\r\n\r\n\r\n\r\n"],[0,"use_huskylens = Fals"]],"start1":0,"start2":0,"length1":20,"length2":172},{"diffs":[[0," False\r\n"],[-1,"\r\n"],[0,"if use_h"]],"start1":167,"start2":167,"length1":18,"length2":16},{"diffs":[[0,"ic.show_"],[-1,"icon(IconNames.YES"],[1,"string(\"Good job\""],[0,")\r\n     "]],"start1":2384,"start2":2384,"length1":34,"length2":33},{"diffs":[[0,"ic.show_"],[-1,"icon(IconNames.YES"],[1,"string(\"Good job\""],[0,")\r\n     "]],"start1":3031,"start2":3031,"length1":34,"length2":33},{"diffs":[[0,"how_"],[-1,"icon(IconNames.YES"],[1,"string(\"Good\""],[0,")\r\n "]],"start1":3742,"start2":3742,"length1":26,"length2":21}]},{"type":"added","filename":"test.ts","value":"// 在這裡測試；當此封包作為擴充功能時，將不會編譯此內容。\n"}]}],"snapshots":[{"timestamp":1747138692315,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"test3\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1747142353594,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"","README.md":"","main.py":"use_huskylens = True\r\nif use_huskylens:\r\n    huskylens.init_i2c()\r\n    huskylens.init_mode(protocolAlgorithm.OBJECTCLASSIFICATION)\r\n\r\nscore = 0\r\nscore2 = 0\r\nadvance_score = 0\r\nis_advanced = False\r\ncountdown_limit = 180\r\nadvance_time = 120\r\nis_running = False\r\n\r\n\"\"\"\r\ncorrect ID check\r\n\"\"\"\r\n\r\n# ========= 正確圖卡 ID 判斷 =========\r\ndef check_image_phase1():\r\n    for id in [1, 2, 3, 4, 5, 6]:\r\n        if huskylens.isAppear_s(id):\r\n            return True\r\n    return False\r\n\r\ndef check_image_phase2():\r\n    for id in [7, 8, 9, 10, 11]: \r\n        if huskylens.isAppear_s(id):\r\n            return True\r\n    return False\r\n\r\ndef check_image_phase3():\r\n    for id in [14, 15, 16]:\r\n        if huskylens.isAppear_s(id):\r\n            return True\r\n    return False\r\n\r\ndef check_image_phase4():\r\n    for id in [12, 13]:\r\n        if huskylens.isAppear_s(id):\r\n            return True\r\n    return False\r\n\r\n\"\"\"\r\nwrong ID check\r\n\"\"\"\r\n# ========= 錯誤圖卡 ID 判斷 =========\r\ndef check_wrong_image_phase1(shown_ids: List[number]) -> bool:\r\n    for id in [1, 2, 5]:\r\n        if huskylens.isAppear_s(id) and not id in shown_ids:\r\n            shown_ids.append(id)\r\n            return True\r\n    return False\r\n\r\ndef check_wrong_image_phase2(shown_ids: List[number]) -> bool:\r\n    for id in [6, 7]:\r\n        if huskylens.isAppear_s(id) and not id in shown_ids:\r\n            shown_ids.append(id)\r\n            return True\r\n    return False\r\n\r\ndef check_wrong_image_phase3(shown_ids: List[number]) -> bool:\r\n    for id in [8, 9]:\r\n        if huskylens.isAppear_s(id) and not id in shown_ids:\r\n            shown_ids.append(id)\r\n            return True\r\n    return False\r\n\r\ndef check_wrong_image_phase4(shown_ids: List[number]) -> bool:\r\n    for id in [8, 9]:\r\n        if huskylens.isAppear_s(id) and not id in shown_ids:\r\n            shown_ids.append(id)\r\n            return True\r\n    return False\r\n\r\n# =========第一回合 =========\r\ndef display_countdown_phase1(seconds: number):\r\n    shown_wrong_ids: List[number] = []\r\n    tick = 0\r\n    for i in range(seconds, 0, -1):\r\n        basic.show_number(i)\r\n        tick += 1\r\n\r\n        if tick % 3 == 0:\r\n            huskylens.request()\r\n            if check_image_phase1():\r\n                basic.show_string(\"Good job\")\r\n                global score\r\n                score += 1\r\n                break\r\n            elif check_wrong_image_phase1(shown_wrong_ids):\r\n                music.play_tone(196, music.beat(BeatFraction.EIGHTH))\r\n                basic.show_string(\"X\")\r\n\r\n        basic.pause(1000)\r\n\r\n# ========= 第二回合 =========\r\ndef display_countdown_phase2(seconds: number):\r\n    shown_wrong_ids: List[number] = []\r\n    tick = 0\r\n    for i in range(seconds, 0, -1):\r\n        basic.show_number(i)\r\n        tick += 1\r\n\r\n        if tick % 3 == 0:\r\n            huskylens.request()\r\n            if check_image_phase2():\r\n                basic.show_string(\"Good job\")\r\n                global score2\r\n                score2 += 1\r\n                break\r\n            elif check_wrong_image_phase2(shown_wrong_ids):\r\n                music.play_tone(196, music.beat(BeatFraction.EIGHTH))\r\n                basic.show_string(\"X\")\r\n\r\n        basic.pause(1000)\r\n\r\n# ========= 進階挑戰 =========\r\ndef display_advance_challenge(total_seconds: number):\r\n    shown_wrong_ids: List[number] = []\r\n    tick = 0\r\n    question = 1\r\n    correct_count = 0\r\n\r\n    for i in range(total_seconds, 0, -1):\r\n        basic.show_number(i)\r\n        tick += 1\r\n\r\n        if tick % 3 == 0:\r\n            huskylens.request()\r\n\r\n            if check_image_phase3():\r\n                basic.show_string(\"Good\")\r\n                global advance_score\r\n                advance_score += 5\r\n                correct_count += 1\r\n                question += 1\r\n\r\n                if correct_count >= 5:\r\n                    break\r\n\r\n            else: #後三題\r\n                if question <= 3:\r\n                    if check_wrong_image_phase3(shown_wrong_ids):\r\n                        music.play_tone(196, music.beat(BeatFraction.EIGHTH))\r\n                        basic.show_string(\"X\")\r\n                else:\r\n                    if check_wrong_image_phase4(shown_wrong_ids):\r\n                        music.play_tone(196, music.beat(BeatFraction.EIGHTH))\r\n                        basic.show_string(\"X\")\r\n\r\n        basic.pause(1000)\r\n\r\n\r\n\r\n\r\n# ========= 第一階段 (A鍵) =========\r\ndef start_quiz():\r\n    global is_advanced, score\r\n    is_advanced = False\r\n    score = 0\r\n    basic.show_string(\"ROUND 1\")\r\n    display_countdown_phase1(countdown_limit)\r\n    basic.clear_screen()\r\n    basic.show_string(\"Score:\")\r\n    basic.show_number(score)\r\n\r\n# ========= 第二階段 (B鍵) =========\r\ndef start_quiz2():\r\n    global is_advanced, score2\r\n    is_advanced = False\r\n    score2 = 0\r\n    basic.show_string(\"ROUND 2\")\r\n    display_countdown_phase2(countdown_limit)\r\n    basic.clear_screen()\r\n    basic.show_string(\"Score2:\")\r\n    basic.show_number(score2)\r\n\r\n# ========= 進階挑戰階段 (A+B鍵) =========\r\ndef start_advanced():\r\n    global is_advanced, advance_score\r\n    is_advanced = True\r\n    advance_score = 0\r\n    basic.show_string(\"ADV\")\r\n    display_advance_challenge(advance_time)\r\n    basic.clear_screen()\r\n    basic.show_string(\"AdvScore:\")\r\n    basic.show_number(advance_score)\r\n    basic.show_string(\"Total:\")\r\n    basic.show_number(score + score2 + advance_score)\r\n\r\n# ========= 按鍵事件 =========\r\ndef on_button_pressed_a():\r\n    global is_running\r\n    if is_running:\r\n        return\r\n    is_running = True\r\n    basic.clear_screen()\r\n    start_text = \"START!\"\r\n    start_tones = [262, 294, 330, 349, 392, 440]\r\n    for i in range(len(start_text)):\r\n        basic.show_string(start_text[i])\r\n        music.play_tone(start_tones[i], music.beat(BeatFraction.EIGHTH))\r\n        basic.pause(100)\r\n    basic.pause(500)\r\n    start_quiz()\r\n    is_running = False\r\n\r\ndef on_button_pressed_b():\r\n    global is_running\r\n    if is_running:\r\n        return\r\n    is_running = True\r\n    basic.clear_screen()\r\n    start_text = \"START!\"\r\n    start_tones = [262, 294, 330, 349, 392, 440]\r\n    for i in range(len(start_text)):\r\n        basic.show_string(start_text[i])\r\n        music.play_tone(start_tones[i], music.beat(BeatFraction.EIGHTH))\r\n        basic.pause(100)\r\n    basic.pause(500)\r\n    start_quiz2()\r\n    is_running = False\r\n\r\ndef on_button_pressed_ab():\r\n    global is_running\r\n    if is_running:\r\n        return\r\n    is_running = True\r\n    basic.clear_screen()\r\n    adv_text = \"START!\"\r\n    adv_tones = [220, 196, 175, 165]\r\n    for i in range(len(adv_text)):\r\n        basic.show_string(adv_text[i])\r\n        music.play_tone(adv_tones[i], music.beat(BeatFraction.EIGHTH))\r\n        basic.pause(100)\r\n    basic.pause(500)\r\n    start_advanced()\r\n    is_running = False\r\n\r\ninput.on_button_pressed(Button.A, on_button_pressed_a)\r\ninput.on_button_pressed(Button.B, on_button_pressed_b)\r\ninput.on_button_pressed(Button.AB, on_button_pressed_ab)\r\n","pxt.json":"{\n    \"name\": \"test3\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"Huskylens\": \"github:dfrobot/pxt-dfrobot_huskylens#v2.0.7\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}},{"timestamp":1747282771597,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"","README.md":"","main.py":"use_huskylens = True\r\nif use_huskylens:\r\n    huskylens.init_i2c()\r\n    huskylens.init_mode(protocolAlgorithm.OBJECTCLASSIFICATION)\r\n\r\n\r\n\r\nscore = 0\r\nscore2 = 0\r\nadvance_score = 0\r\nis_advanced = False\r\ncountdown_limit = 180\r\nadvance_time = 120\r\nis_running = False\r\n\r\n\"\"\"\r\ncorrect ID check\r\n\"\"\"\r\n\r\n# ========= 正確圖卡 ID 判斷 =========\r\ndef check_image_phase1():\r\n    for id in [1, 2, 3, 4, 5, 6]:\r\n        if huskylens.isAppear_s(id):\r\n            return True\r\n    return False\r\n\r\ndef check_image_phase2():\r\n    for id in [7, 8, 9, 10, 11]: \r\n        if huskylens.isAppear_s(id):\r\n            return True\r\n    return False\r\n\r\ndef check_image_phase3():\r\n    for id in [14, 15, 16]:\r\n        if huskylens.isAppear_s(id):\r\n            return True\r\n    return False\r\n\r\ndef check_image_phase4():\r\n    for id in [12, 13]:\r\n        if huskylens.isAppear_s(id):\r\n            return True\r\n    return False\r\n\r\n\"\"\"\r\nwrong ID check\r\n\"\"\"\r\n# ========= 錯誤圖卡 ID 判斷 =========\r\ndef check_wrong_image_phase1(shown_ids: List[number]) -> bool:\r\n    for id in [7, 8, 9, 10, 11]:\r\n        if huskylens.isAppear_s(id) and not id in shown_ids:\r\n            shown_ids.append(id)\r\n            return True\r\n    return False\r\n\r\ndef check_wrong_image_phase2(shown_ids: List[number]) -> bool:\r\n    for id in [1, 2, 3, 4, 5, 6]:\r\n        if huskylens.isAppear_s(id) and not id in shown_ids:\r\n            shown_ids.append(id)\r\n            return True\r\n    return False\r\n\r\ndef check_wrong_image_phase3(shown_ids: List[number]) -> bool:\r\n    for id in [12, 13]:\r\n        if huskylens.isAppear_s(id) and not id in shown_ids:\r\n            shown_ids.append(id)\r\n            return True\r\n    return False\r\n\r\ndef check_wrong_image_phase4(shown_ids: List[number]) -> bool:\r\n    for id in [14, 15, 16]:\r\n        if huskylens.isAppear_s(id) and not id in shown_ids:\r\n            shown_ids.append(id)\r\n            return True\r\n    return False\r\n\r\n# =========第一回合 =========\r\ndef display_countdown_phase1(seconds: number):\r\n    shown_wrong_ids: List[number] = []\r\n    tick = 0\r\n    for i in range(seconds, 0, -1):\r\n        basic.show_number(i)\r\n        tick += 1\r\n\r\n        if tick % 3 == 0:\r\n            huskylens.request()\r\n            if check_image_phase1():\r\n                basic.show_string(\"Good job\")\r\n                global score\r\n                score += 1\r\n                break\r\n            elif check_wrong_image_phase1(shown_wrong_ids):\r\n                music.play_tone(196, music.beat(BeatFraction.EIGHTH))\r\n                basic.show_string(\"X\")\r\n\r\n        basic.pause(1000)\r\n\r\n# ========= 第二回合 =========\r\ndef display_countdown_phase2(seconds: number):\r\n    shown_wrong_ids: List[number] = []\r\n    tick = 0\r\n    for i in range(seconds, 0, -1):\r\n        basic.show_number(i)\r\n        tick += 1\r\n\r\n        if tick % 3 == 0:\r\n            huskylens.request()\r\n            if check_image_phase2():\r\n                basic.show_string(\"Good job\")\r\n                global score2\r\n                score2 += 1\r\n                break\r\n            elif check_wrong_image_phase2(shown_wrong_ids):\r\n                music.play_tone(196, music.beat(BeatFraction.EIGHTH))\r\n                basic.show_string(\"X\")\r\n\r\n        basic.pause(1000)\r\n\r\n# ========= 進階挑戰 =========\r\ndef display_advance_challenge(total_seconds: number):\r\n    shown_wrong_ids: List[number] = []\r\n    tick = 0\r\n    question = 1\r\n    correct_count = 0\r\n\r\n    for i in range(total_seconds, 0, -1):\r\n        basic.show_number(i)\r\n        tick += 1\r\n\r\n        if tick % 3 == 0:\r\n            huskylens.request()\r\n\r\n            if check_image_phase3():\r\n                basic.show_string(\"Good\")\r\n                global advance_score\r\n                advance_score += 5\r\n                correct_count += 1\r\n                question += 1\r\n\r\n                if correct_count >= 5:\r\n                    break\r\n\r\n            else: #後三題\r\n                if question <= 3:\r\n                    if check_wrong_image_phase3(shown_wrong_ids):\r\n                        music.play_tone(196, music.beat(BeatFraction.EIGHTH))\r\n                        basic.show_string(\"X\")\r\n                else:\r\n                    if check_wrong_image_phase4(shown_wrong_ids):\r\n                        music.play_tone(196, music.beat(BeatFraction.EIGHTH))\r\n                        basic.show_string(\"X\")\r\n\r\n        basic.pause(1000)\r\n\r\n\r\n\r\n\r\n# ========= 第一階段 (A鍵) =========\r\ndef start_quiz():\r\n    global is_advanced, score\r\n    is_advanced = False\r\n    score = 0\r\n    basic.show_string(\"ROUND 1\")\r\n    display_countdown_phase1(countdown_limit)\r\n    basic.clear_screen()\r\n    basic.show_string(\"Score:\")\r\n    basic.show_number(score)\r\n\r\n# ========= 第二階段 (B鍵) =========\r\ndef start_quiz2():\r\n    global is_advanced, score2\r\n    is_advanced = False\r\n    score2 = 0\r\n    display_countdown_phase2(countdown_limit)\r\n    basic.clear_screen()\r\n    basic.show_string(\"Score2:\")\r\n    basic.show_number(score2)\r\n\r\n# ========= 進階挑戰階段 (A+B鍵) =========\r\ndef start_advanced():\r\n    global is_advanced, advance_score\r\n    is_advanced = True\r\n    advance_score = 0\r\n    display_advance_challenge(advance_time)\r\n    basic.clear_screen()\r\n    basic.show_string(\"AdvScore:\")\r\n    basic.show_number(advance_score)\r\n    basic.show_string(\"Total:\")\r\n    basic.show_number(score + score2 + advance_score)\r\n\r\n# ========= 按鍵事件 =========\r\ndef on_button_pressed_a():\r\n    global is_running\r\n    if is_running:\r\n        return\r\n    is_running = True\r\n    basic.clear_screen()\r\n    start_text = \"START!\"\r\n    start_tones = [262, 294, 330, 349, 392, 440]\r\n    for i in range(len(start_text)):\r\n        basic.show_string(start_text[i])\r\n        music.play_tone(start_tones[i], music.beat(BeatFraction.EIGHTH))\r\n        basic.pause(100)\r\n    basic.pause(500)\r\n    start_quiz()\r\n    is_running = False\r\n\r\ndef on_button_pressed_b():\r\n    global is_running\r\n    if is_running:\r\n        return\r\n    is_running = True\r\n    basic.clear_screen()\r\n    start_text = \"START!\"\r\n    start_tones = [262, 294, 330, 349, 392, 440]\r\n    for i in range(len(start_text)):\r\n        basic.show_string(start_text[i])\r\n        music.play_tone(start_tones[i], music.beat(BeatFraction.EIGHTH))\r\n        basic.pause(100)\r\n    basic.pause(500)\r\n    start_quiz2()\r\n    is_running = False\r\n\r\ndef on_button_pressed_ab():\r\n    global is_running\r\n    if is_running:\r\n        return\r\n    is_running = True\r\n    basic.clear_screen()\r\n    adv_text = \"START!\"\r\n    adv_tones = [220, 196, 175, 165]\r\n    for i in range(len(adv_text)):\r\n        basic.show_string(adv_text[i])\r\n        music.play_tone(adv_tones[i], music.beat(BeatFraction.EIGHTH))\r\n        basic.pause(100)\r\n    basic.pause(500)\r\n    start_advanced()\r\n    is_running = False\r\n\r\ninput.on_button_pressed(Button.A, on_button_pressed_a)\r\ninput.on_button_pressed(Button.B, on_button_pressed_b)\r\ninput.on_button_pressed(Button.AB, on_button_pressed_ab)\r\n","pxt.json":"{\n    \"name\": \"test3 new\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"Huskylens\": \"github:dfrobot/pxt-dfrobot_huskylens#v2.0.7\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}}],"shares":[{"id":"90899-71035-06329-28523","timestamp":1747142428435},{"id":"70726-67199-26019-98585","timestamp":1747142937657},{"id":"94431-92155-52865-93318","timestamp":1747143628560}],"lastSaveTime":1747283675305}